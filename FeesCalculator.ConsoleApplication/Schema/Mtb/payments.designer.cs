// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>FeesCalculator.ConsoleApplication</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>True</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace FeesCalculator.ConsoleApplication
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Xml;
    using System.Collections.Generic;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class STATEMENTS
    {

        private List<STATEMENTSSTATEMENTBY> sTATEMENTBYField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public STATEMENTS()
        {
            this.sTATEMENTBYField = new List<STATEMENTSSTATEMENTBY>();
        }

        [System.Xml.Serialization.XmlElementAttribute("STATEMENTBY", Order = 0)]
        public List<STATEMENTSSTATEMENTBY> STATEMENTBY
        {
            get
            {
                return this.sTATEMENTBYField;
            }
            set
            {
                this.sTATEMENTBYField = value;
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(STATEMENTS));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current STATEMENTS object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an STATEMENTS object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output STATEMENTS object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out STATEMENTS obj, out System.Exception exception)
        {
            exception = null;
            obj = default(STATEMENTS);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out STATEMENTS obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static STATEMENTS Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((STATEMENTS) (Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            catch (Exception rException)
            {
                stringReader = new System.IO.StringReader(xml);
                return ((STATEMENTS)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current STATEMENTS object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an STATEMENTS object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output STATEMENTS object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out STATEMENTS obj, out System.Exception exception)
        {
            exception = null;
            obj = default(STATEMENTS);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out STATEMENTS obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out STATEMENTS obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static STATEMENTS LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static STATEMENTS LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            string xmlString;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            catch(Exception e)
            {
                throw e;
            }

            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class STATEMENTSSTATEMENTBY
    {

        private string sTATEMENTDATEField;

        private ulong aCCOUNTField;

        private ushort cURRCODEField;

        private uint bICField;

        private string dATAACTUALITYField;

        private string oPENINGBALANCEField;

        private string oPENINGBALANCENATField;

        private string dATEPREVIOUSField;

        private string cLOSINGBALANCEField;

        private string cLOSINGBALANCENATField;

        private byte dEBETDOCUMENTSNETField;

        private string dEBETTURNOVERField;

        private string dEBETTURNOVERNATField;

        private List<STATEMENTSSTATEMENTBYDOCUMENT> dEBETDOCUMENTSField;

        private byte cREDITDOCUMENTSNETField;

        private string cREDITTURNOVERField;

        private string cREDITTURNOVERNATField;

        private List<STATEMENTSSTATEMENTBYDOCUMENT1> cREDITDOCUMENTSField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public STATEMENTSSTATEMENTBY()
        {
            this.cREDITDOCUMENTSField = new List<STATEMENTSSTATEMENTBYDOCUMENT1>();
            this.dEBETDOCUMENTSField = new List<STATEMENTSSTATEMENTBYDOCUMENT>();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string STATEMENTDATE
        {
            get
            {
                return this.sTATEMENTDATEField;
            }
            set
            {
                this.sTATEMENTDATEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public ulong ACCOUNT
        {
            get
            {
                return this.aCCOUNTField;
            }
            set
            {
                this.aCCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public ushort CURRCODE
        {
            get
            {
                return this.cURRCODEField;
            }
            set
            {
                this.cURRCODEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public uint BIC
        {
            get
            {
                return this.bICField;
            }
            set
            {
                this.bICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string DATAACTUALITY
        {
            get
            {
                return this.dATAACTUALITYField;
            }
            set
            {
                this.dATAACTUALITYField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        public string OPENINGBALANCE
        {
            get
            {
                return this.oPENINGBALANCEField;
            }
            set
            {
                this.oPENINGBALANCEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        public string OPENINGBALANCENAT
        {
            get
            {
                return this.oPENINGBALANCENATField;
            }
            set
            {
                this.oPENINGBALANCENATField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
        public string DATEPREVIOUS
        {
            get
            {
                return this.dATEPREVIOUSField;
            }
            set
            {
                this.dATEPREVIOUSField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
        public string CLOSINGBALANCE
        {
            get
            {
                return this.cLOSINGBALANCEField;
            }
            set
            {
                this.cLOSINGBALANCEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
        public string CLOSINGBALANCENAT
        {
            get
            {
                return this.cLOSINGBALANCENATField;
            }
            set
            {
                this.cLOSINGBALANCENATField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
        public byte DEBETDOCUMENTSNET
        {
            get
            {
                return this.dEBETDOCUMENTSNETField;
            }
            set
            {
                this.dEBETDOCUMENTSNETField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
        public string DEBETTURNOVER
        {
            get
            {
                return this.dEBETTURNOVERField;
            }
            set
            {
                this.dEBETTURNOVERField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
        public string DEBETTURNOVERNAT
        {
            get
            {
                return this.dEBETTURNOVERNATField;
            }
            set
            {
                this.dEBETTURNOVERNATField = value;
            }
        }

        [System.Xml.Serialization.XmlArrayAttribute(Order = 13)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DOCUMENT", IsNullable = false)]
        public List<STATEMENTSSTATEMENTBYDOCUMENT> DEBETDOCUMENTS
        {
            get
            {
                return this.dEBETDOCUMENTSField;
            }
            set
            {
                this.dEBETDOCUMENTSField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
        public byte CREDITDOCUMENTSNET
        {
            get
            {
                return this.cREDITDOCUMENTSNETField;
            }
            set
            {
                this.cREDITDOCUMENTSNETField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
        public string CREDITTURNOVER
        {
            get
            {
                return this.cREDITTURNOVERField;
            }
            set
            {
                this.cREDITTURNOVERField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
        public string CREDITTURNOVERNAT
        {
            get
            {
                return this.cREDITTURNOVERNATField;
            }
            set
            {
                this.cREDITTURNOVERNATField = value;
            }
        }

        [System.Xml.Serialization.XmlArrayAttribute(Order = 17)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DOCUMENT", IsNullable = false)]
        public List<STATEMENTSSTATEMENTBYDOCUMENT1> CREDITDOCUMENTS
        {
            get
            {
                return this.cREDITDOCUMENTSField;
            }
            set
            {
                this.cREDITDOCUMENTSField = value;
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(STATEMENTSSTATEMENTBY));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current STATEMENTSSTATEMENTBY object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an STATEMENTSSTATEMENTBY object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output STATEMENTSSTATEMENTBY object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out STATEMENTSSTATEMENTBY obj, out System.Exception exception)
        {
            exception = null;
            obj = default(STATEMENTSSTATEMENTBY);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out STATEMENTSSTATEMENTBY obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static STATEMENTSSTATEMENTBY Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((STATEMENTSSTATEMENTBY)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current STATEMENTSSTATEMENTBY object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an STATEMENTSSTATEMENTBY object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output STATEMENTSSTATEMENTBY object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out STATEMENTSSTATEMENTBY obj, out System.Exception exception)
        {
            exception = null;
            obj = default(STATEMENTSSTATEMENTBY);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out STATEMENTSSTATEMENTBY obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out STATEMENTSSTATEMENTBY obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static STATEMENTSSTATEMENTBY LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static STATEMENTSSTATEMENTBY LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class STATEMENTSSTATEMENTBYDOCUMENT
    {

        private uint dOCUMENTNUMBERField;

        private string dOCUMENTDATEField;

        private string cURRCODEField;

        private string pAYERField;

        private string pAYERUNNField;

        private string pAYERBANKBICField;

        private string pAYERBANKNAMEField;

        private string pAYERACCOUNTField;

        private string bENEFICIARField;

        private String bENEFICIARUNNField;

        private uint bENEFICIARBANKBICField;

        private string bENEFICIARBANKNAMEField;

        private ulong bENEFICIARACCOUNTField;

        private string aMOUNTField;

        private string aMOUNTNATField;

        private string gROUNDField;

        private object gROUNDADDField;

        private string dOCUMENTTYPEField;

        private string pAYMENTURGENTField;

        private string sTATEPAYField;

        private object fORWHOMEUNNField;

        private object fORWHOMESTATEPAYField;

        private string cORRESPBANKBICField;

        private object cORRESPBANKNAMEField;

        private object cORRESPBANKCORRACCOUNTField;

        private object rECEIVERBANKBICField;

        private object rECEIVERBANKNAMEField;

        private object rECEIVERBANKCORRACCOUNTField;

        private string bANKOFFICIALSField;

        private string vALUEDATEField;

        private object nOTEFROMBANKField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public uint DOCUMENTNUMBER
        {
            get
            {
                return this.dOCUMENTNUMBERField;
            }
            set
            {
                this.dOCUMENTNUMBERField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string DOCUMENTDATE
        {
            get
            {
                return this.dOCUMENTDATEField;
            }
            set
            {
                this.dOCUMENTDATEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public string CURRCODE
        {
            get
            {
                return this.cURRCODEField;
            }
            set
            {
                this.cURRCODEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public string PAYER
        {
            get
            {
                return this.pAYERField;
            }
            set
            {
                this.pAYERField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string PAYERUNN
        {
            get
            {
                return this.pAYERUNNField;
            }
            set
            {
                this.pAYERUNNField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        public string PAYERBANKBIC
        {
            get
            {
                return this.pAYERBANKBICField;
            }
            set
            {
                this.pAYERBANKBICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        public string PAYERBANKNAME
        {
            get
            {
                return this.pAYERBANKNAMEField;
            }
            set
            {
                this.pAYERBANKNAMEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
        public string PAYERACCOUNT
        {
            get
            {
                return this.pAYERACCOUNTField;
            }
            set
            {
                this.pAYERACCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
        public string BENEFICIAR
        {
            get
            {
                return this.bENEFICIARField;
            }
            set
            {
                this.bENEFICIARField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
        public String BENEFICIARUNN
        {
            get
            {
                return this.bENEFICIARUNNField;
            }
            set
            {
                this.bENEFICIARUNNField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
        public uint BENEFICIARBANKBIC
        {
            get
            {
                return this.bENEFICIARBANKBICField;
            }
            set
            {
                this.bENEFICIARBANKBICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
        public string BENEFICIARBANKNAME
        {
            get
            {
                return this.bENEFICIARBANKNAMEField;
            }
            set
            {
                this.bENEFICIARBANKNAMEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
        public ulong BENEFICIARACCOUNT
        {
            get
            {
                return this.bENEFICIARACCOUNTField;
            }
            set
            {
                this.bENEFICIARACCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
        public string AMOUNT
        {
            get
            {
                return this.aMOUNTField;
            }
            set
            {
                this.aMOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
        public string AMOUNTNAT
        {
            get
            {
                return this.aMOUNTNATField;
            }
            set
            {
                this.aMOUNTNATField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
        public string GROUND
        {
            get
            {
                return this.gROUNDField;
            }
            set
            {
                this.gROUNDField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
        public object GROUNDADD
        {
            get
            {
                return this.gROUNDADDField;
            }
            set
            {
                this.gROUNDADDField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
        public string DOCUMENTTYPE
        {
            get
            {
                return this.dOCUMENTTYPEField;
            }
            set
            {
                this.dOCUMENTTYPEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
        public string PAYMENTURGENT
        {
            get
            {
                return this.pAYMENTURGENTField;
            }
            set
            {
                this.pAYMENTURGENTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
        public string STATEPAY
        {
            get
            {
                return this.sTATEPAYField;
            }
            set
            {
                this.sTATEPAYField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
        public object FORWHOMEUNN
        {
            get
            {
                return this.fORWHOMEUNNField;
            }
            set
            {
                this.fORWHOMEUNNField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 21)]
        public object FORWHOMESTATEPAY
        {
            get
            {
                return this.fORWHOMESTATEPAYField;
            }
            set
            {
                this.fORWHOMESTATEPAYField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 22)]
        public string CORRESPBANKBIC
        {
            get
            {
                return this.cORRESPBANKBICField;
            }
            set
            {
                this.cORRESPBANKBICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 23)]
        public object CORRESPBANKNAME
        {
            get
            {
                return this.cORRESPBANKNAMEField;
            }
            set
            {
                this.cORRESPBANKNAMEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 24)]
        public object CORRESPBANKCORRACCOUNT
        {
            get
            {
                return this.cORRESPBANKCORRACCOUNTField;
            }
            set
            {
                this.cORRESPBANKCORRACCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 25)]
        public object RECEIVERBANKBIC
        {
            get
            {
                return this.rECEIVERBANKBICField;
            }
            set
            {
                this.rECEIVERBANKBICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 26)]
        public object RECEIVERBANKNAME
        {
            get
            {
                return this.rECEIVERBANKNAMEField;
            }
            set
            {
                this.rECEIVERBANKNAMEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 27)]
        public object RECEIVERBANKCORRACCOUNT
        {
            get
            {
                return this.rECEIVERBANKCORRACCOUNTField;
            }
            set
            {
                this.rECEIVERBANKCORRACCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 28)]
        public string BANKOFFICIALS
        {
            get
            {
                return this.bANKOFFICIALSField;
            }
            set
            {
                this.bANKOFFICIALSField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 29)]
        public string VALUEDATE
        {
            get
            {
                return this.vALUEDATEField;
            }
            set
            {
                this.vALUEDATEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 30)]
        public object NOTEFROMBANK
        {
            get
            {
                return this.nOTEFROMBANKField;
            }
            set
            {
                this.nOTEFROMBANKField = value;
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(STATEMENTSSTATEMENTBYDOCUMENT));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current STATEMENTSSTATEMENTBYDOCUMENT object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an STATEMENTSSTATEMENTBYDOCUMENT object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output STATEMENTSSTATEMENTBYDOCUMENT object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out STATEMENTSSTATEMENTBYDOCUMENT obj, out System.Exception exception)
        {
            exception = null;
            obj = default(STATEMENTSSTATEMENTBYDOCUMENT);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out STATEMENTSSTATEMENTBYDOCUMENT obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static STATEMENTSSTATEMENTBYDOCUMENT Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((STATEMENTSSTATEMENTBYDOCUMENT)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current STATEMENTSSTATEMENTBYDOCUMENT object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an STATEMENTSSTATEMENTBYDOCUMENT object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output STATEMENTSSTATEMENTBYDOCUMENT object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out STATEMENTSSTATEMENTBYDOCUMENT obj, out System.Exception exception)
        {
            exception = null;
            obj = default(STATEMENTSSTATEMENTBYDOCUMENT);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out STATEMENTSSTATEMENTBYDOCUMENT obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out STATEMENTSSTATEMENTBYDOCUMENT obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static STATEMENTSSTATEMENTBYDOCUMENT LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static STATEMENTSSTATEMENTBYDOCUMENT LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class STATEMENTSSTATEMENTBYDOCUMENT1
    {

        private uint dOCUMENTNUMBERField;

        private string dOCUMENTDATEField;

        private string cURRCODEField;

        private string pAYERField;

        private string pAYERUNNField;

        private uint pAYERBANKBICField;

        private string pAYERBANKNAMEField;

        private ulong pAYERACCOUNTField;

        private string bENEFICIARField;

        private string bENEFICIARUNNField;

        private string bENEFICIARBANKBICField;

        private string bENEFICIARBANKNAMEField;

        private string bENEFICIARACCOUNTField;

        private string aMOUNTField;

        private string aMOUNTNATField;

        private string gROUNDField;

        private string gROUNDADDField;

        private string dOCUMENTTYPEField;

        private string pAYMENTURGENTField;

        private object sTATEPAYField;

        private object fORWHOMEUNNField;

        private object fORWHOMESTATEPAYField;

        private object cORRESPBANKBICField;

        private object cORRESPBANKNAMEField;

        private object cORRESPBANKCORRACCOUNTField;

        private object rECEIVERBANKBICField;

        private object rECEIVERBANKNAMEField;

        private object rECEIVERBANKCORRACCOUNTField;

        private string bANKOFFICIALSField;

        private string vALUEDATEField;

        private object nOTEFROMBANKField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public uint DOCUMENTNUMBER
        {
            get
            {
                return this.dOCUMENTNUMBERField;
            }
            set
            {
                this.dOCUMENTNUMBERField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string DOCUMENTDATE
        {
            get
            {
                return this.dOCUMENTDATEField;
            }
            set
            {
                this.dOCUMENTDATEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public string CURRCODE
        {
            get
            {
                return this.cURRCODEField;
            }
            set
            {
                this.cURRCODEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public string PAYER
        {
            get
            {
                return this.pAYERField;
            }
            set
            {
                this.pAYERField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string PAYERUNN
        {
            get
            {
                return this.pAYERUNNField;
            }
            set
            {
                this.pAYERUNNField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        public uint PAYERBANKBIC
        {
            get
            {
                return this.pAYERBANKBICField;
            }
            set
            {
                this.pAYERBANKBICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        public string PAYERBANKNAME
        {
            get
            {
                return this.pAYERBANKNAMEField;
            }
            set
            {
                this.pAYERBANKNAMEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
        public ulong PAYERACCOUNT
        {
            get
            {
                return this.pAYERACCOUNTField;
            }
            set
            {
                this.pAYERACCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
        public string BENEFICIAR
        {
            get
            {
                return this.bENEFICIARField;
            }
            set
            {
                this.bENEFICIARField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
        public string BENEFICIARUNN
        {
            get
            {
                return this.bENEFICIARUNNField;
            }
            set
            {
                this.bENEFICIARUNNField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
        public string BENEFICIARBANKBIC
        {
            get
            {
                return this.bENEFICIARBANKBICField;
            }
            set
            {
                this.bENEFICIARBANKBICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
        public string BENEFICIARBANKNAME
        {
            get
            {
                return this.bENEFICIARBANKNAMEField;
            }
            set
            {
                this.bENEFICIARBANKNAMEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
        public string BENEFICIARACCOUNT
        {
            get
            {
                return this.bENEFICIARACCOUNTField;
            }
            set
            {
                this.bENEFICIARACCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
        public string AMOUNT
        {
            get
            {
                return this.aMOUNTField;
            }
            set
            {
                this.aMOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
        public string AMOUNTNAT
        {
            get
            {
                return this.aMOUNTNATField;
            }
            set
            {
                this.aMOUNTNATField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
        public string GROUND
        {
            get
            {
                return this.gROUNDField;
            }
            set
            {
                this.gROUNDField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
        public string GROUNDADD
        {
            get
            {
                return this.gROUNDADDField;
            }
            set
            {
                this.gROUNDADDField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
        public string DOCUMENTTYPE
        {
            get
            {
                return this.dOCUMENTTYPEField;
            }
            set
            {
                this.dOCUMENTTYPEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
        public string PAYMENTURGENT
        {
            get
            {
                return this.pAYMENTURGENTField;
            }
            set
            {
                this.pAYMENTURGENTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
        public object STATEPAY
        {
            get
            {
                return this.sTATEPAYField;
            }
            set
            {
                this.sTATEPAYField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
        public object FORWHOMEUNN
        {
            get
            {
                return this.fORWHOMEUNNField;
            }
            set
            {
                this.fORWHOMEUNNField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 21)]
        public object FORWHOMESTATEPAY
        {
            get
            {
                return this.fORWHOMESTATEPAYField;
            }
            set
            {
                this.fORWHOMESTATEPAYField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 22)]
        public object CORRESPBANKBIC
        {
            get
            {
                return this.cORRESPBANKBICField;
            }
            set
            {
                this.cORRESPBANKBICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 23)]
        public object CORRESPBANKNAME
        {
            get
            {
                return this.cORRESPBANKNAMEField;
            }
            set
            {
                this.cORRESPBANKNAMEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 24)]
        public object CORRESPBANKCORRACCOUNT
        {
            get
            {
                return this.cORRESPBANKCORRACCOUNTField;
            }
            set
            {
                this.cORRESPBANKCORRACCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 25)]
        public object RECEIVERBANKBIC
        {
            get
            {
                return this.rECEIVERBANKBICField;
            }
            set
            {
                this.rECEIVERBANKBICField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 26)]
        public object RECEIVERBANKNAME
        {
            get
            {
                return this.rECEIVERBANKNAMEField;
            }
            set
            {
                this.rECEIVERBANKNAMEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 27)]
        public object RECEIVERBANKCORRACCOUNT
        {
            get
            {
                return this.rECEIVERBANKCORRACCOUNTField;
            }
            set
            {
                this.rECEIVERBANKCORRACCOUNTField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 28)]
        public string BANKOFFICIALS
        {
            get
            {
                return this.bANKOFFICIALSField;
            }
            set
            {
                this.bANKOFFICIALSField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 29)]
        public string VALUEDATE
        {
            get
            {
                return this.vALUEDATEField;
            }
            set
            {
                this.vALUEDATEField = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 30)]
        public object NOTEFROMBANK
        {
            get
            {
                return this.nOTEFROMBANKField;
            }
            set
            {
                this.nOTEFROMBANKField = value;
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(STATEMENTSSTATEMENTBYDOCUMENT1));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current STATEMENTSSTATEMENTBYDOCUMENT1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an STATEMENTSSTATEMENTBYDOCUMENT1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output STATEMENTSSTATEMENTBYDOCUMENT1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out STATEMENTSSTATEMENTBYDOCUMENT1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(STATEMENTSSTATEMENTBYDOCUMENT1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out STATEMENTSSTATEMENTBYDOCUMENT1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static STATEMENTSSTATEMENTBYDOCUMENT1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((STATEMENTSSTATEMENTBYDOCUMENT1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current STATEMENTSSTATEMENTBYDOCUMENT1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an STATEMENTSSTATEMENTBYDOCUMENT1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output STATEMENTSSTATEMENTBYDOCUMENT1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out STATEMENTSSTATEMENTBYDOCUMENT1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(STATEMENTSSTATEMENTBYDOCUMENT1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out STATEMENTSSTATEMENTBYDOCUMENT1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out STATEMENTSSTATEMENTBYDOCUMENT1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static STATEMENTSSTATEMENTBYDOCUMENT1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static STATEMENTSSTATEMENTBYDOCUMENT1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }
}
